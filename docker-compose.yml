version: "3"
services:
  alice:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - 3000:3000
      - 3001:3001
    volumes:
      - ./alice.conf.template:/etc/nginx/templates/default.conf.template:z
    depends_on:
      - alice0
      - alice1
      - webhook-relay

  postgres:
    environment:
      POSTGRES_PASSWORD: mysecretpassword
    container_name: postgres
    image: postgres:12-alpine
    # build: ./postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

  alice0:
    # image: ghcr.io/hyperledger/aries-cloudagent-python:py3.9-indy-1.16.0-0.8.1
    image: ghcr.io/sicpa-dlab/aries-cloudagent-python:py3.9-fix-did-exchange-cache
    # image: acapy-test-image
    # build:
    #   context: .
    #   dockerfile: Dockerfile.acapy
    #   args:
    #     acapy_url: https://github.com/sicpa-dlab/aries-cloudagent-python@fa29cdc5c8529cf0fdb0021709c1f7983f567cd4
    user: 0:0
    volumes:
      - ./configs:/configs:ro,z
      - ./vdr:/home/aries/.aries_cloudagent/vdr:z
      - ./healthcheck.py:/healthcheck.py:z
      - ./noop_cache:/usr/lib/python3.9/site-packages/noop_cache:z
    command: >
      start
        --arg-file /configs/alice.yml
        --webhook-url http://webhook-relay:8080
        --wallet-storage-type postgres_storage
        --wallet-storage-config '{"url":"postgres:5432","max_connections":5}'
        --wallet-storage-creds '{"account":"postgres","password":"mysecretpassword","admin_account":"postgres","admin_password":"mysecretpassword"}'
        --plugin noop_cache.v1_0
    healthcheck:
      test: ["CMD-SHELL", "python3", "/healthcheck.py", "http://localhost:3001/status/live"]
      start_period: 30s
      interval: 7s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
      webhook-listener:
        condition: service_started
      tails:
        condition: service_started

  alice1:
    # image: ghcr.io/hyperledger/aries-cloudagent-python:py3.9-indy-1.16.0-0.8.1
    image: ghcr.io/sicpa-dlab/aries-cloudagent-python:py3.9-fix-did-exchange-cache
    # image: acapy-test-image
    # build:
    #   context: .
    #   dockerfile: Dockerfile.acapy
    #   args:
    #     acapy_url: https://github.com/sicpa-dlab/aries-cloudagent-python@fa29cdc5c8529cf0fdb0021709c1f7983f567cd4
    user: 0:0
    volumes:
      - ./configs:/configs:ro,z
      - ./vdr:/home/aries/.aries_cloudagent/vdr:z
      - ./healthcheck.py:/healthcheck.py:z
      - ./noop_cache:/usr/lib/python3.9/site-packages/noop_cache:z
    command: >
      start
        --arg-file /configs/alice.yml
        --webhook-url http://webhook-relay:8080
        --wallet-storage-type postgres_storage
        --wallet-storage-config '{"url":"postgres:5432","max_connections":5}'
        --wallet-storage-creds '{"account":"postgres","password":"mysecretpassword","admin_account":"postgres","admin_password":"mysecretpassword"}'
        --plugin noop_cache.v1_0
    healthcheck:
      test: ["CMD-SHELL", "python3", "/healthcheck.py", "http://localhost:3001/status/live"]
      start_period: 30s
      interval: 7s
      timeout: 5s
      retries: 5
    depends_on:
      alice0:
        condition: service_healthy
      postgres:
        condition: service_healthy
      webhook-listener:
        condition: service_started
      tails:
        condition: service_started

  webhook-relay:
    image: webhook-relay
    build:
      context: ./webhook_listener
    volumes:
      - ./webhook_listener/listener:/usr/src/app/listener:z
    environment:
      ADMIN_URL: http://alice:3001
    depends_on:
      alice0:
        condition: service_healthy

  bob:
    # image: ghcr.io/hyperledger/aries-cloudagent-python:py3.9-indy-1.16.0-0.8.1
    image: ghcr.io/sicpa-dlab/aries-cloudagent-python:py3.9-fix-did-exchange-cache
    # image: acapy-test-image
    # build:
    #   context: .
    #   dockerfile: Dockerfile.acapy
    #   args:
    #     acapy_url: https://github.com/sicpa-dlab/aries-cloudagent-python@fa29cdc5c8529cf0fdb0021709c1f7983f567cd4
    ports:
      - "3002:3001"
    user: 0:0
    volumes:
      - ./configs:/configs:ro,z
      - ./vdr:/home/aries/.aries_cloudagent/vdr:z
      - ./healthcheck.py:/healthcheck.py:z
      - ./noop_cache:/usr/lib/python3.9/site-packages/noop_cache:z
    command: >
      start
        --arg-file /configs/bob.yml
        --webhook-url http://webhook-listener:8080
        --wallet-storage-type postgres_storage
        --wallet-storage-config '{"url":"postgres:5432","max_connections":5}'
        --wallet-storage-creds '{"account":"postgres","password":"mysecretpassword","admin_account":"postgres","admin_password":"mysecretpassword"}'
        --plugin noop_cache.v1_0
    healthcheck:
      test: ["CMD-SHELL", "python3", "/healthcheck.py", "http://localhost:3001/status/live"]
      start_period: 30s
      interval: 7s
      timeout: 5s
      retries: 5
    depends_on:
      webhook-listener:
        condition: service_started

  example:
    container_name: controller
    build:
      context: .
    environment:
      - ALICE=http://alice:3001
      - BOB=http://bob:3001
    volumes:
      - ./controller:/usr/src/app/controller:ro,z
      - ./minimal_example.py:/usr/src/app/minimal_example.py:ro,z
    command: python -m minimal_example
    depends_on:
      alice:
        condition: service_started
      alice0:
        condition: service_healthy
      alice1:
        condition: service_healthy
      bob:
        condition: service_healthy

  webhook-listener:
    image: mendhak/http-https-echo:18
    environment:
      - HTTP_PORT=8080

  tails:
    image: ghcr.io/bcgov/tails-server:latest
    ports:
      - 6543:6543
    environment:
      - GENESIS_URL=https://raw.githubusercontent.com/Indicio-tech/indicio-network/main/genesis_files/pool_transactions_testnet_genesis
    command: >
      tails-server
      --host 0.0.0.0
      --port 6543
      --storage-path /tmp/tails-files
      --log-level INFO

  tests:
    container_name: juggernaut
    build:
      context: .
      args:
        install_flags: ""
    environment:
      - ALICE=http://alice:3001
      - ALICE0=http://alice0:3001
      - ALICE1=http://alice1:3001
      - BOB=http://bob:3001
    volumes:
      - ./controller:/usr/src/app/controller:z
      - ./tests:/usr/src/app/tests:z
    entrypoint: "poetry run pytest"
    depends_on:
      alice0:
        condition: service_healthy
      alice1:
        condition: service_healthy
      bob:
        condition: service_healthy
