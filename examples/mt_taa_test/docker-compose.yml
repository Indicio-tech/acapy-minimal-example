services:
  acapy:
    #image: ghcr.io/openwallet-foundation/acapy-agent:py3.12-1.2.0
    image: acapy-test
    ports:
      - "3001:3001"
    environment:
      RUST_LOG: 'aries-askar::log::target=error'
    command: >
      start
        --label Alice
        --inbound-transport http 0.0.0.0 3000
        --outbound-transport http
        --endpoint http://acapy:3000
        --admin 0.0.0.0 3001
        --admin-insecure-mode
        --tails-server-base-url http://tails:6543
        --genesis-url https://raw.githubusercontent.com/Indicio-tech/indicio-network/main/genesis_files/pool_transactions_testnet_genesis
        --wallet-type askar
        --wallet-name acapy
        --wallet-key insecure
        --auto-provision
        --log-level debug
        --debug-webhooks
        --multitenant
        --multitenant-admin
        --jwt-secret insecure
        --multitenancy-config wallet_type=single-wallet-askar key_derivation_method=RAW
    healthcheck:
      test: curl -s -o /dev/null -w '%{http_code}' "http://localhost:3001/status/live" | grep "200" > /dev/null
      start_period: 30s
      interval: 7s
      timeout: 5s
      retries: 5
    depends_on:
      tails:
        condition: service_started

  tails:
    image: ghcr.io/bcgov/tails-server:latest
    ports:
      - 6543:6543
    environment:
      - GENESIS_URL=https://raw.githubusercontent.com/Indicio-tech/indicio-network/main/genesis_files/pool_transactions_testnet_genesis
    command: >
      tails-server
      --host 0.0.0.0
      --port 6543
      --storage-path /tmp/tails-files
      --log-level INFO

  example:
    container_name: controller
    build:
      context: ../..
    environment:
      - ACAPY=http://acapy:3001
    volumes:
      - ../../acapy_controller:/usr/src/app/acapy_controller:z
      - ./example.py:/usr/src/app/example.py:ro,z
    command: python -m example
    depends_on:
      acapy:
        condition: service_healthy
